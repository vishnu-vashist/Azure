{
    "$schema": "https://schema.management.azure.com/schemas/2019-08-01/tenantDeploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "enterpriseScaleCompanyPrefix": {
            "maxLength": 5,
            "type": "String",
            "metadata": {
                "description": "Provide the prefix (max 5 characters) to the management group hierarchy that will be created"
            }
        },
        "managementSubscriptionId": {
            "defaultValue": "",
            "maxLength": 36,
            "type": "String",
            "metadata": {
                "description": "Provide the subscription id of an existing, empty subscription you want to dedicate for management. If you don't want to bring a subscription, leave this parameter empty as is."
            }
        },
        "lzSubscriptionId": {
            "defaultValue": [],
            "maxLength": 36,
            "type": "Array",
            "metadata": {
                "description": "Provide the subscription id fo an existing, empty subscription you want to move in as your first landing zone."
            }
        },
        "enableLogAnalytics": {
            "defaultValue": "No",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "type": "String",
            "metadata": {
                "description": "If 'Yes' is selected when also adding a subscription for management, ARM will assign two policies to enable auditing in your environment, into the Log Analytics workspace for platform monitoring. If 'No', it will be ignored."
            }
        },
        "retentionInDays": {
            "defaultValue": "",
            "type": "String"
        },
        "enableAsc": {
            "defaultValue": "No",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "type": "String",
            "metadata": {
                "description": "If 'Yes' is selected when also adding a subscription for management, ARM will assign two policies to enable auditing in your environment, into the Log Analytics workspace for platform monitoring. If 'No', it will be ignored."
            }
        },
        "enableAscForServers": {
            "defaultValue": "Free",
            "allowedValues": [
                "Standard",
                "Free"
            ],
            "type": "String"
        },
        "enableAscForAppServices": {
            "defaultValue": "Free",
            "allowedValues": [
                "Standard",
                "Free"
            ],
            "type": "String"
        },
        "enableAscForStorage": {
            "defaultValue": "Free",
            "allowedValues": [
                "Standard",
                "Free"
            ],
            "type": "String"
        },
        "enableAscForSql": {
            "defaultValue": "Free",
            "allowedValues": [
                "Standard",
                "Free"
            ],
            "type": "String"
        },
        "enableAscForKeyVault": {
            "defaultValue": "Free",
            "allowedValues": [
                "Standard",
                "Free"
            ],
            "type": "String"
        },
        "enableAscForArm": {
            "defaultValue": "Free",
            "allowedValues": [
                "Standard",
                "Free"
            ],
            "type": "String"
        },
        "enableAscForDns": {
            "defaultValue": "Free",
            "allowedValues": [
                "Standard",
                "Free"
            ],
            "type": "String"
        },
        "enableAscForKubernetes": {
            "defaultValue": "Free",
            "allowedValues": [
                "Standard",
                "Free"
            ],
            "type": "String"
        },
        "enableAscForRegistries": {
            "defaultValue": "Free",
            "allowedValues": [
                "Standard",
                "Free"
            ],
            "type": "String"
        },
        "enableAksPolicy": {
            "defaultValue": "No",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "type": "String"
        },
        "denyAksPrivileged": {
            "defaultValue": "No",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "type": "String"
        },
        "denyAksPrivilegedEscalation": {
            "defaultValue": "No",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "type": "String"
        },
        "denyHttpIngressForAks": {
            "defaultValue": "No",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "type": "String"
        },
        "enableSecuritySolution": {
            "defaultValue": "No",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "type": "String"
        },
        "enableAgentHealth": {
            "defaultValue": "No",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "type": "String"
        },
        "enableChangeTracking": {
            "defaultValue": "No",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "type": "String"
        },
        "enableUpdateMgmt": {
            "defaultValue": "Yes",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "type": "String"
        },
        "enableActivityLog": {
            "defaultValue": "Yes",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "type": "String"
        },
        "enableAntiMalware": {
            "defaultValue": "Yes",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "type": "String"
        },
        "enableVmInsights": {
            "defaultValue": "Yes",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "type": "String"
        },
        "enableServiceMap": {
            "defaultValue": "Yes",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "type": "String"
        },
        "enableSqlAssessment": {
            "defaultValue": "Yes",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "type": "String"
        },
        "enableSqlAudit": {
            "defaultValue": "No",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "type": "String"
        },
        "enableSqlEncryption": {
            "defaultValue": "No",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "type": "String"
        },
        "enableArcMonitoring": {
            "defaultValue": "No",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "type": "String",
            "metadata": {
                "description": "If 'Yes' is selected, policy will be assigned to enforce Arc monitoring."
            }
        },
        "enableVmMonitoring": {
            "defaultValue": "No",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "type": "String",
            "metadata": {
                "description": "If 'Yes' is selected, policy will be assigned to enforce VM monitoring."
            }
        },
        "enableVmssMonitoring": {
            "defaultValue": "No",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "type": "String",
            "metadata": {
                "description": "If 'Yes' is selected, policy will be assigned to enforce VMSS monitoring."
            }
        },
        "enableVmBackup": {
            "defaultValue": "No",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "type": "String"
        },
        "denyRdp": {
            "defaultValue": "No",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "type": "String"
        },
        "enableStorageHttps": {
            "defaultValue": "No",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "type": "String"
        },
        "denyIpForwarding": {
            "defaultValue": "No",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "type": "String"
        },
        "denySubnetWithoutNsg": {
            "defaultValue": "No",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "type": "String"
        }
    },
    "variables": {
        "azPolicyEnvMapping": {
            "https://management.azure.com/": "auxiliary/policies.json",
            "https://management.chinacloudapi.cn": "auxiliary/mkPolicies.json",
            "https://management.azgov.com": "auxiliary/"
        },
        "azEnvPolicy": "[variables('azPolicyEnvMapping')[environment().resourceManager]]",
        "deploymentUris": {
            "managementGroups": "[uri(deployment().properties.templateLink.uri, 'auxiliary/mgmtGroups.json')]",
            "policyDefinitions": "[concat(uri(deployment().properties.templateLink.uri, variables('azEnvPolicy')))]",
            "monitoring": "[uri(deployment().properties.templateLink.uri, 'auxiliary/logAnalytics.json')]",
            "monitoringSolutions": "[uri(deployment().properties.templateLink.uri, 'auxiliary/logAnalyticsSolutions.json')]",
            "diagnosticsAndSecurity": "[uri(deployment().properties.templateLink.uri, 'auxiliary/diagnosticsAndSecurity.json')]",
            "landingZone": "[uri(deployment().properties.templateLink.uri, 'auxiliary/lz.json')]"
        },
        "moveSubscription": "[concat(parameters('enterpriseScaleCompanyPrefix'), '-management', '/', parameters('managementSubscriptionId'))]",
        "noSubscription": "[concat(parameters('enterpriseScaleCompanyPrefix'), '-management', '/', 'na')]",
        "noLzSubscription": "[concat(parameters('enterpriseScaleCompanyPrefix'), '-online', '/', 'nalz')]",
        "deploymentNames": {
            "mgmtGroupDeploymentName": "[take(concat('EntScale-Mgs', '-', deployment().location, guid(parameters('enterpriseScaleCompanyPrefix'))), 64)]",
            "policyDeploymentName": "[take(concat('EntScale-Policy', '-', deployment().location, guid(parameters('enterpriseScaleCompanyPrefix'))), 64)]",
            "monitoringDeploymentName": "[take(concat('EntScale-Monitoring', '-', deployment().location, guid(parameters('enterpriseScaleCompanyPrefix'))), 64)]",
            "monitoringSolutionsDeploymentName": "[take(concat('EntScale-Solutions', '-', deployment().location, guid(parameters('enterpriseScaleCompanyPrefix'))), 64)]",
            "diagAndSecDeploymentName": "[take(concat('EntScale-DiagSec', '-', deployment().location, guid(parameters('enterpriseScaleCompanyPrefix'))), 64)]",
            "lzDeploymentName": "[take(concat('EntScale-LZ', '-', deployment().location, guid(parameters('enterpriseScaleCompanyPrefix'))), 64)]"
        }
    },
    "resources": [
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-10-01",
            "name": "[variables('deploymentNames').mgmtGroupDeploymentName]",
            "location": "[deployment().location]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "contentVersion": "1.0.0.0",
                    "uri": "[variables('deploymentUris').managementGroups]"
                },
                "parameters": {
                    "topLevelManagementGroupPrefix": {
                        "value": "[parameters('enterpriseScaleCompanyPrefix')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-10-01",
            "name": "[variables('deploymentNames').policyDeploymentName]",
            "location": "[deployment().location]",
            "dependsOn": [
                "[variables('deploymentNames').mgmtGroupDeploymentName]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "contentVersion": "1.0.0.0",
                    "uri": "[variables('deploymentUris').policyDefinitions]"
                },
                "parameters": {
                    "topLevelManagementGroupPrefix": {
                        "value": "[parameters('enterpriseScaleCompanyPrefix')]"
                    }
                }
            },
            "scope": "[concat('Microsoft.Management/managementGroups/', parameters('enterpriseScaleCompanyPrefix'))]"
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-10-01",
            "name": "[concat('delayFor', copyIndex())]",
            "location": "[deployment().location]",
            "dependsOn": [
                "[variables('deploymentNames').policyDeploymentName]"
            ],
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "resources": [],
                    "outputs": {}
                }
            },
            "scope": "[concat('Microsoft.Management/managementGroups/', parameters('enterpriseScaleCompanyPrefix'))]",
            "copy": {
                "name": "DeploymentDelay",
                "count": 20,
                "mode": "Serial",
                "batchSize": 1
            }
        },
        {
            "type": "Microsoft.Management/managementGroups/subscriptions",
            "apiVersion": "2020-05-01",
            "name": "[if(not(empty(parameters('managementSubscriptionId'))), variables('moveSubscription'), variables('noSubscription'))]",
            "dependsOn": [
                "[variables('deploymentNames').mgmtGroupDeploymentName]"
            ],
            "properties": {},
            "condition": "[not(empty(parameters('managementSubscriptionId')))]"
        },
        {
            "type": "Microsoft.Management/managementGroups/subscriptions",
            "apiVersion": "2020-05-01",
            "name": "[if(not(empty(parameters('lzSubscriptionId'))), concat(parameters('enterpriseScaleCompanyPrefix'), '-online', '/', parameters('lzSubscriptionId')[copyIndex()]), variables('noLzSubscription'))]",
            "dependsOn": [
                "[variables('deploymentNames').mgmtGroupDeploymentName]"
            ],
            "properties": {},
            "copy": {
                "name": "lzMove",
                "count": "[length(parameters('lzSubscriptionId'))]"
            },
            "condition": "[not(empty(parameters('lzSubscriptionId')))]"
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-05-01",
            "name": "[variables('deploymentNames').monitoringDeploymentName]",
            "location": "[deployment().location]",
            "dependsOn": [
                "[variables('deploymentNames').policyDeploymentName]",
                "DeploymentDelay"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "contentVersion": "1.0.0.0",
                    "uri": "[variables('deploymentUris').monitoring]"
                },
                "parameters": {
                    "topLevelManagementGroupPrefix": {
                        "value": "[parameters('enterpriseScaleCompanyPrefix')]"
                    },
                    "enableLogAnalytics": {
                        "value": "[parameters('enableLogAnalytics')]"
                    },
                    "managementSubscriptionId": {
                        "value": "[parameters('managementSubscriptionId')]"
                    },
                    "retentionInDays": {
                        "value": "[parameters('retentionInDays')]"
                    }
                }
            },
            "scope": "[concat('Microsoft.Management/managementGroups/', parameters('enterpriseScaleCompanyPrefix'), '-management')]",
            "condition": "[and(not(empty(parameters('managementSubscriptionId'))),equals(parameters('enableLogAnalytics'), 'Yes'))]"
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-05-01",
            "name": "[variables('deploymentNames').monitoringSolutionsDeploymentName]",
            "location": "[deployment().location]",
            "dependsOn": [
                "[variables('deploymentNames').monitoringDeploymentName]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "contentVersion": "1.0.0.0",
                    "uri": "[variables('deploymentUris').monitoringSolutions]"
                },
                "parameters": {
                    "topLevelManagementGroupPrefix": {
                        "value": "[parameters('enterpriseScaleCompanyPrefix')]"
                    },
                    "managementSubscriptionId": {
                        "value": "[parameters('managementSubscriptionId')]"
                    },
                    "enableSecuritySolution": {
                        "value": "[parameters('enableSecuritySolution')]"
                    },
                    "enableAgentHealth": {
                        "value": "[parameters('enableAgentHealth')]"
                    },
                    "enableChangeTracking": {
                        "value": "[parameters('enableChangeTracking')]"
                    },
                    "enableUpdateMgmt": {
                        "value": "[parameters('enableUpdateMgmt')]"
                    },
                    "enableActivityLog": {
                        "value": "[parameters('enableActivityLog')]"
                    },
                    "enableAntiMalware": {
                        "value": "[parameters('enableAntiMalware')]"
                    },
                    "enableVmInsights": {
                        "value": "[parameters('enableVmInsights')]"
                    },
                    "enableServiceMap": {
                        "value": "[parameters('enableServiceMap')]"
                    },
                    "enableSqlAssessment": {
                        "value": "[parameters('enableSqlAssessment')]"
                    }
                }
            },
            "subscriptionId": "[parameters('managementSubscriptionId')]",
            "condition": "[and(not(empty(parameters('managementSubscriptionId'))), or(or(or(or(or(equals(parameters('enableSecuritySolution'), 'Yes'), equals(parameters('enableAgentHealth'), 'Yes')), equals(parameters('enableChangeTracking'), 'Yes')), equals(parameters('enableUpdateMgmt'), 'Yes'), equals(parameters('enableActivityLog'), 'Yes')), equals(parameters('enableAntiMalware'), 'Yes'), equals(parameters('enableVmInsights'), 'Yes')), equals(parameters('enableServiceMap'), 'Yes'), equals(parameters('enableSqlAssessment'), 'Yes')))]"
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-05-01",
            "name": "[variables('deploymentNames').lzDeploymentName]",
            "location": "[deployment().location]",
            "dependsOn": [
                "[variables('deploymentNames').policyDeploymentName]",
                "DeploymentDelay"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "contentVersion": "1.0.0.0",
                    "uri": "[variables('deploymentUris').landingZone]"
                },
                "parameters": {
                    "topLevelManagementGroupPrefix": {
                        "value": "[parameters('enterpriseScaleCompanyPrefix')]"
                    },
                    "denyHttpIngressForAks": {
                        "value": "[parameters('denyHttpIngressForAks')]"
                    },
                    "denyAksPrivilegedEscalation": {
                        "value": "[parameters('denyAksPrivilegedEscalation')]"
                    },
                    "denyAksPrivileged": {
                        "value": "[parameters('denyAksPrivileged')]"
                    },
                    "enableSqlAudit": {
                        "value": "[parameters('enableSqlAudit')]"
                    },
                    "enableSqlEncryption": {
                        "value": "[parameters('enableSqlEncryption')]"
                    },
                    "enableVmBackup": {
                        "value": "[parameters('enableVmBackup')]"
                    },
                    "denyRdp": {
                        "value": "[parameters('denyRdp')]"
                    },
                    "enableAksPolicy": {
                        "value": "[parameters('enableAksPolicy')]"
                    },
                    "enableStorageHttps": {
                        "value": "[parameters('enableStorageHttps')]"
                    },
                    "denyIpForwarding": {
                        "value": "[parameters('denyIpForwarding')]"
                    },
                    "denySubnetWithoutNsg": {
                        "value": "[parameters('denySubnetWithoutNsg')]"
                    }
                }
            },
            "scope": "[concat('Microsoft.Management/managementGroups/', parameters('enterpriseScaleCompanyPrefix'), '-landingzones')]",
            "condition": "[or(or(or(or(or(or(or(equals(parameters('denyIpForwarding'), 'Yes'), equals(parameters('denyRdp'), 'Yes')), equals(parameters('enableSqlAudit'), 'Yes')), equals(parameters('denyAksPrivilegedEscalation'), 'Yes'), equals(parameters('denyHttpIngressForAks'), 'Yes')), equals(parameters('denyAksPrivileged'), 'Yes'), equals(parameters('denyAksPrivileged'), 'Yes')), equals(parameters('denySubnetWithoutNsg'), 'Yes'), equals(parameters('enableSqlAssessment'), 'Yes')), equals(parameters('enableVmMonitoring'), 'Yes'), equals(parameters('enableVmMonitoring'), 'Yes')), equals(parameters('enableSqlEncryption'), 'Yes'), equals(parameters('enableStorageHttps'), 'Yes'))]"
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-05-01",
            "name": "[variables('deploymentNames').diagAndSecDeploymentName]",
            "location": "[deployment().location]",
            "dependsOn": [
                "[variables('deploymentNames').monitoringDeploymentName]",
                "DeploymentDelay"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "contentVersion": "1.0.0.0",
                    "uri": "[variables('deploymentUris').diagnosticsAndSecurity]"
                },
                "parameters": {
                    "topLevelManagementGroupPrefix": {
                        "value": "[parameters('enterpriseScaleCompanyPrefix')]"
                    },
                    "enableLogAnalytics": {
                        "value": "[parameters('enableLogAnalytics')]"
                    },
                    "enableAsc": {
                        "value": "[parameters('enableAsc')]"
                    },
                    "enableAscForServers": {
                        "value": "[parameters('enableAscForServers')]"
                    },
                    "enableAscForAppServices": {
                        "value": "[parameters('enableAscForAppServices')]"
                    },
                    "enableAscForStorage": {
                        "value": "[parameters('enableAscForStorage')]"
                    },
                    "enableAscForSql": {
                        "value": "[parameters('enableAscForSql')]"
                    },
                    "enableAscForKeyVault": {
                        "value": "[parameters('enableAscForKeyVault')]"
                    },
                    "enableAscForArm": {
                        "value": "[parameters('enableAscForArm')]"
                    },
                    "enableAscForDns": {
                        "value": "[parameters('enableAscForDns')]"
                    },
                    "enableAscForKubernetes": {
                        "value": "[parameters('enableAscForKubernetes')]"
                    },
                    "enableAscForRegistries": {
                        "value": "[parameters('enableAscForRegistries')]"
                    },
                    "managementSubscriptionId": {
                        "value": "[parameters('managementSubscriptionId')]"
                    },
                    "lzSubscriptionId": {
                        "value": "[parameters('lzSubscriptionId')]"
                    },
                    "enableVmMonitoring": {
                        "value": "[parameters('enableVmMonitoring')]"
                    },
                    "enableVmssMonitoring": {
                        "value": "[parameters('enableVmssMonitoring')]"
                    },
                    "enableArcMonitoring": {
                        "value": "[parameters('enableArcMonitoring')]"
                    }
                }
            },
            "scope": "[concat('Microsoft.Management/managementGroups/', parameters('enterpriseScaleCompanyPrefix'))]",
            "condition": "[and(not(empty(parameters('managementSubscriptionId'))), or(equals(parameters('enableLogAnalytics'), 'Yes'), equals(parameters('enableAsc'), 'Yes')))]"
        }
    ],
    "outputs": {
        "deployment": {
            "type": "String",
            "value": "[concat(deployment().name, ' has successfully deployed. Welcome to Enterprise-Scale!')]"
        }
    }
}
